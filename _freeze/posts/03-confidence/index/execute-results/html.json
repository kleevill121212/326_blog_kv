{
  "hash": "41ccd38a084a8421cdbaeb8dbcef864c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mini Project 3\"\n---\n\n\n\n# Simulation to Investigate Confidence Intervals\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## AI Assistance Used\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n###Our Parameters\nsample_sizes <- c(12, 555, 8090)\npopulation_proportions <- c(0.55, 0.15)\nconfidence_level <- 0.90\nz_critical <- qnorm(1 - (1 - confidence_level) / 2)\nn_simulations <- 5000\n\n###Creating the Simulation Function\nrun_simulation <- function(n, p) {\n  coverage_count <- 0\n  interval_widths <- numeric(n_simulations)\n  \n  for (i in seq_len(n_simulations)) {\n    sample <- rbinom(1, n, p) / n  ###Generate sample proportion\n    temp <- replicate(2, sample * (1 - sample))\n    se <- ifelse(mean(temp) > 0, sqrt(mean(temp) / n), 0)  ###Standard error check\n    \n    ###Confidence Interval\n    ci_lower <- sample - z_critical * se\n    ci_upper <- sample + z_critical * se\n    \n    ###Coverage\n    if (p >= ci_lower & p <= ci_upper) {\n      coverage_count <- coverage_count + 1\n    }\n    \n    ###Interval Width\n    interval_widths[i] <- abs(ci_upper - ci_lower)\n  }\n  \n  ###Final Computation\n  coverage_rate <- coverage_count / n_simulations\n  avg_width <- mean(interval_widths)\n  \n  return(tibble(Sample_Size = n, Population_Proportion = p, Coverage_Rate = coverage_rate, Average_Width = avg_width))\n}\n\n###Running Sims\nresults_list <- expand.grid(Sample_Size = sample_sizes, Population_Proportion = population_proportions) %>%\n  pmap(~ run_simulation(..1, ..2))\n\nresults_df <- bind_rows(results_list)\n\nprint(results_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Sample_Size Population_Proportion Coverage_Rate Average_Width\n        <dbl>                 <dbl>         <dbl>         <dbl>\n1          12                  0.55         0.928        0.452 \n2         555                  0.55         0.907        0.0694\n3        8090                  0.55         0.904        0.0182\n4          12                  0.15         0.836        0.295 \n5         555                  0.15         0.900        0.0498\n6        8090                  0.15         0.903        0.0131\n```\n\n\n:::\n:::\n\n\n\n# Write Up\n\n**Results Table**\n\n\\\n\n|             |                       |               |               |\n|-------------|-----------------------|---------------|---------------|\n| Sample Size | Population Proportion | Coverage Rate | Average Width |\n| 12          | 0.55                  | 0.9256        | 0.45099       |\n| 555         | 0.55                  | 0.9062        | 0.06940       |\n| 8090        | 0.55                  | 0.8928        | 0.01819       |\n| 12          | 0.15                  | 0.8290        | 0.29356       |\n| 555         | 0.15                  | 0.8982        | 0.04976       |\n| 8090        | 0.15                  | 0.9094        | 0.01305       |\n\n\\\n\n**Large Sample Assumption Calculation**\n\n\\\n\n![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXeeHto-fCuLPj6hswTdGwBkuadYAurE5RI2GOq6glJk6j_UcYwe6t8hEDRsxWevxnV59CNLhB1DlSsuEh1u7M3NUwasExrtuRSA_L1FG_-DTM8pn-10j37Z4aUx1Nji_Ty3aZrv0g?key=YBLkOb1DZQib0m_7xyco_w0c)\n\nIf we take a look at the selected sample sizes, I went for a very small sample of 12, a large sample of 555, and a very large sample of 8090. If we examine both settings where the sample is 12, we can see a considerable deviation from the ideal coverage rate we are looking for. Since the confidence interval we are working with is 90%, we want that coverage rate to approach that value as well. However, as we can see with the assumption calculation, it violates the large n assumption at least once for each of those settings. This lets us know that the value of n is too small. It is also worth noting that both the p = 0.15 and p = 0.55 have considerable average widths, indicating a lack of precision when it comes to the Confidence Interval. Interestingly, the average width is larger for p = 0.55 compared to p = 0.15. \n\nMoving on to the next sample size of n = 555, we can see a few stark differences between those two settings and the small n setting. First of all, we can see that the coverage rates for both of these settings (p = 0.15 and p = 0.55) are extremely close to the desired value of 0.90. Additionally, when we examine the results of the large n test, we can see that each of these two settings passes. The difference from 0.9 in the coverage rate for each setting is negligible, with one slightly higher and the other slightly lower. More interesting to note is that we can see a continued trend of the average width being wider for the setting that is closer to p = 0.5. Although both settings saw a dramatic ‘improvement’ in their coverage rates, it is still true that the setting of p = 0.55 has a wider average width. \n\nLastly, when examining the final two settings where n = 8090, a few additional trends emerge, while some are also confirmed. The coverage rates are about the same as the previous setting when looking at how far off they are from 0.9. However, if we look closely, we can see that the coverage rate for the setting of p = 0.55 is descending as n increases, whereas the setting of p = 0.15 is ascending as n increases. We can also confirm what was observed in the previous 4 settings, where no matter the n, we see a larger average width in the setting closer to p = 0.5. However, as the value of n increases, that discrepancy becomes less and less apparent.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}